---
import PageTransition from '../components/PageTransition.vue'
import CustomCursor from '../components/ui/CustomCursor.vue'

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="de" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Digital Experiences & Creative Branding by Fabian Paul" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="view-transition" content="same-origin" />
    
    <!-- Preload critical fonts -->
    <link 
      rel="preload" 
      href="/fonts/TT_Firs_Neue_Medium.woff2" 
      as="font" 
      type="font/woff2" 
      crossorigin="anonymous"
    />
    <link 
      rel="preload" 
      href="/fonts/TT_Firs_Neue_Light.woff2" 
      as="font" 
      type="font/woff2" 
      crossorigin="anonymous"
    />
    
    <!-- GSAP Scripts -->
    <script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"></script>
    <script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/ScrollTrigger.min.js"></script>
    <script is:inline>
      gsap.registerPlugin(ScrollTrigger);
    </script>

    <!-- Font Loading Script -->
    <script is:inline>
      if ("fonts" in document) {
        // Stage 1: Start with system fonts
        document.documentElement.classList.add('fonts-stage-1');
        
        Promise.all([
          document.fonts.load('500 1em "TT Firs Neue"'),
          document.fonts.load('300 1em "TT Firs Neue"')
        ]).then(() => {
          // Stage 2: Custom fonts are loaded
          document.documentElement.classList.add('fonts-stage-2');
        }).catch((err) => {
          console.warn('Font loading failed:', err);
        });
      }
    </script>

    <style>
      /* TT Firs Neue Medium */
      @font-face {
        font-family: 'TT Firs Neue';
        src: url('/fonts/TT_Firs_Neue_Medium.woff2') format('woff2'),
             url('/fonts/TT_Firs_Neue_Medium.woff') format('woff'),
             url('/fonts/TT_Firs_Neue_Medium.ttf') format('truetype');
        font-weight: 500;
        font-style: normal;
        font-display: swap;
        font-feature-settings: "kern" 1;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      
      /* TT Firs Neue Medium Italic */
      @font-face {
        font-family: 'TT Firs Neue';
        src: url('/fonts/TT_Firs_Neue_Medium_Italic.woff2') format('woff2'),
             url('/fonts/TT_Firs_Neue_Medium_Italic.woff') format('woff'),
             url('/fonts/TT_Firs_Neue_Medium_Italic.ttf') format('truetype');
        font-weight: 500;
        font-style: italic;
        font-display: swap;
        font-feature-settings: "kern" 1;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      
      /* TT Firs Neue Light */
      @font-face {
        font-family: 'TT Firs Neue';
        src: url('/fonts/TT_Firs_Neue_Light.woff2') format('woff2'),
             url('/fonts/TT_Firs_Neue_Light.woff') format('woff'),
             url('/fonts/TT_Firs_Neue_Light.ttf') format('truetype');
        font-weight: 300;
        font-style: normal;
        font-display: swap;
        font-feature-settings: "kern" 1;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      
      /* TT Firs Neue Light Italic */
      @font-face {
        font-family: 'TT Firs Neue';
        src: url('/fonts/TT_Firs_Neue_Light_Italic.woff2') format('woff2'),
             url('/fonts/TT_Firs_Neue_Light_Italic.woff') format('woff'),
             url('/fonts/TT_Firs_Neue_Light_Italic.ttf') format('truetype');
        font-weight: 300;
        font-style: italic;
        font-display: swap;
        font-feature-settings: "kern" 1;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
    </style>

    <!-- Fügen Sie diese Zeilen im Head-Bereich hinzu -->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
  </head>
  <body class="bg-[#1E1E1E] text-[#E5E5E5] font-tt-firs-neue font-medium antialiased overflow-x-hidden">
    <PageTransition client:load data-transition />
    <CustomCursor client:load />
    <slot />
  </body>
</html>

<script>
  import Lenis from 'lenis'

  // Lenis smooth scroll
  const initSmoothScroll = () => {
    const lenis = new Lenis({
      duration: 1.2,
      easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
      orientation: 'vertical',
      gestureOrientation: 'vertical',
      smooth: true,
      smoothTouch: false,
      touchMultiplier: 2,
      wheelMultiplier: 1,
      normalizeWheel: true
    })

    // GSAP ScrollTrigger Integration
    lenis.on('scroll', () => {
      ScrollTrigger.update()
    })

    // RAF loop für smoother scroll
    const raf = (time) => {
      lenis.raf(time)
      requestAnimationFrame(raf)
    }
    requestAnimationFrame(raf)

    // Optional: Aktualisiere Lenis wenn sich die Fenstergröße ändert
    window.addEventListener('resize', () => {
      lenis.resize()
    })

    // Optional: Scrolle sanft zu Anker-Links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault()
        const target = document.querySelector(this.getAttribute('href'))
        if (target) {
          lenis.scrollTo(target, {
            offset: 0,
            duration: 1.5,
            easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t))
          })
        }
      })
    })

    // Speichere lenis Instanz global
    window.lenis = lenis
  }

  // Device detection (from previous code)
  const isTouchDevice = () => {
    return (('ontouchstart' in window) ||
      (navigator.maxTouchPoints > 0) ||
      (navigator.msMaxTouchPoints > 0));
  }

  // Initialize everything
  document.addEventListener('DOMContentLoaded', () => {
    const html = document.documentElement;
    if (!isTouchDevice() && window.innerWidth >= 1024) {
      html.classList.add('desktop-scroll');
      initSmoothScroll();
    }
  });

  // Update on resize
  window.addEventListener('resize', () => {
    const html = document.documentElement;
    if (!isTouchDevice() && window.innerWidth >= 1024) {
      html.classList.add('desktop-scroll');
      if (!window.lenis) initSmoothScroll();
    } else {
      html.classList.remove('desktop-scroll');
    }
  });
</script>

<style is:global>
  @import "../styles/typography.css";

  html {
    scroll-behavior: smooth;
  }

  body {
    margin: 0;
    min-height: 100vh;
  }

  ::selection {
    background-color: #00FF00;
    color: #0A0A0A;
  }

  /* Spezifische Styles für Desktop-Geräte */
  html.desktop-scroll {
    overscroll-behavior: none;
    overscroll-behavior-y: none;
    overflow-x: hidden;
  }

  html.lenis {
    height: auto;
  }

  .lenis.lenis-smooth {
    scroll-behavior: auto;
  }

  .lenis.lenis-smooth [data-lenis-prevent] {
    overscroll-behavior: contain;
  }

  .lenis.lenis-stopped {
    overflow: hidden;
  }
</style>