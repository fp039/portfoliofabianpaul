---
import BlogLayout from './BlogLayout.astro';
import BlogGallery from '../components/BlogGallery.astro';
import type { CollectionEntry } from 'astro:content';
import '../styles/prose.css';
import { getRoutePath } from '../utils/paths';
import { Image } from 'astro:assets';
import { blogImages } from '../utils/blogImages';

interface Props {
  frontmatter: {
    title: string;
    date: Date | string;
    author: string;
    image: string;
    images?: {
      src: string;
      layout?: 'grid' | 'slider';
      position?: 'before' | 'after';
    }[];
    gallery?: string[];
    tags: string[];
    file: string;
    url: string;
  }
}

const { frontmatter } = Astro.props;

// Bestimme den Blog-Key aus dem Bildpfad
const getBlogKey = (imagePath: string) => {
  if (imagePath.includes('design_code_bridge')) return 'welcome';
  const pathParts = imagePath.split('/');
  const blogFolder = pathParts[pathParts.length - 2];
  return blogFolder === 'imageai' ? 'image-ai' : blogFolder;
};

const blogKey = getBlogKey(frontmatter.image) as keyof typeof blogImages;
const blogData = blogImages[blogKey];

// Sortiere Bilder nach Position
const beforeContent = frontmatter.images?.filter(img => img.position === 'before') || [];
const afterContent = frontmatter.images?.filter(img => img.position === 'after') || [];

const formatDate = (date: Date | string) => {
  return new Date(date).toLocaleDateString('de-DE', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// URL konvertieren
const processedUrl = getRoutePath(frontmatter.url);
---

<BlogLayout title={frontmatter.title}>
  <article class="-mt-[clamp(5rem,15vh,8rem)] relative w-full">
    <!-- Hero Section -->
    <header class="mb-8">
      <!-- Hauptbild -->
      <div class="w-screen relative">
        <div class="relative h-[clamp(250px,40vh,800px)] md:h-[clamp(400px,60vh,800px)]">
          {blogData?.header && (
            <Image
              src={blogData.header}
              alt={frontmatter.title}
              width={2000}
              height={1000}
              class="absolute inset-0 w-full h-full object-cover"
              format="webp"
              quality={90}
              loading="eager"
            />
          )}
        </div>
      </div>

      <!-- Meta-Informationen -->
      <div class="container mx-auto px-4 pl-8 pr-4 sm:px-8">
        <div class="max-w-4xl mx-auto md:mt-16">
          <div class="bg-[#1E1E1E] md:bg-transparent md:p-0 rounded-t-3xl md:rounded-none">
            <div class="space-y-6">
              <div class="space-y-3">
                <h1 class="text-fluid-2xl md:text-fluid-3xl font-bold text-text-primary leading-[1.1] pt-12">
                  {frontmatter.title}
                </h1>
                
                <div class="flex flex-wrap items-center gap-3 text-text-secondary/80">
                  <time 
                    datetime={frontmatter.date?.toString()} 
                    class="flex items-center gap-2 text-fluid-sm"
                  >
                    <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                    {formatDate(frontmatter.date)}
                  </time>
                  
                  <span class="w-1.5 h-1.5 rounded-full bg-accent/80"></span>
                  
                  <span class="flex items-center gap-2 text-fluid-sm">
                    <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                    {frontmatter.author}
                  </span>
                </div>
              </div>
              
              <div class="flex flex-wrap gap-2">
                {frontmatter.tags.map(tag => (
                  <span class="px-3 py-1 text-fluid-sm rounded-full bg-accent/10 text-accent font-medium hover:bg-accent/20 transition-colors">
                    #{tag}
                  </span>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </header>

    <!-- Content Container -->
    <div class="container mx-auto px-4 sm:px-8 sm: mb-8">
      <div class="max-w-4xl pl-4 pr-4 pt-8 mx-auto">
        <!-- Bilder vor dem Content -->
        {beforeContent.map(img => (
          blogData?.gallery && (
            <BlogGallery 
              images={blogData.gallery} 
              layout={img.layout || 'grid'}
            />
          )
        ))}

        <!-- Inhalt -->
        <div class="prose-custom max-w-none">
          <slot />
        </div>

        <!-- Bilder nach dem Content -->
        {afterContent.map(img => (
          blogData?.gallery && (
            <BlogGallery 
              images={blogData.gallery} 
              layout={img.layout || 'grid'}
            />
          )
        ))}

        <!-- Navigation -->
        <div class="mt-16 pt-8 border-t border-white/10">
          <a 
            href={getRoutePath("/blog")}
            class="group inline-flex items-center gap-3 text-accent hover:underline"
          >
            <svg class="w-5 h-5 transition-transform group-hover:-translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
            </svg>
            <span class="text-fluid-base font-medium">Zur체ck zum Blog</span>
          </a>
        </div>
      </div>
    </div>
  </article>
</BlogLayout>

<style>
  /* F체r die Bildergalerie Scrollbar */
  .overflow-x-auto {
    scrollbar-width: thin;
    scrollbar-color: theme('colors.accent') transparent;
  }
  
  .overflow-x-auto::-webkit-scrollbar {
    height: 6px;
  }
  
  .overflow-x-auto::-webkit-scrollbar-track {
    background: transparent;
  }
  
  .overflow-x-auto::-webkit-scrollbar-thumb {
    background-color: theme('colors.accent');
    border-radius: 20px;
  }

  /* Entfernt Standard-Margin vom Body */
  :global(body) {
    margin: 0;
    padding: 0;
    overflow-x: hidden;
  }

  /* Stellt sicher, dass das Bild immer die volle Viewport-Breite einnimmt */
  .w-screen {
    width: 100vw;
    margin-left: calc(-50vw + 50%);
    margin-right: calc(-50vw + 50%);
  }

  /* Zus채tzliche Styles f체r Hero-Bild */
  .aspect-21-9 {
    aspect-ratio: 21/9;
  }

  @media (min-width: 2000px) {
    .aspect-21-9 {
      max-height: 800px;
    }
  }

  .aspect-16-9 {
    aspect-ratio: 16/9;
  }

  @media (max-width: 768px) {
    .aspect-16-9 {
      min-height: 400px;
    }
  }

  .aspect-16-9,
  .aspect-21-9 {
    transition: all 0.3s ease-in-out;
  }
</style>