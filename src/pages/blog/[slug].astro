---
import { getCollection, type CollectionEntry } from 'astro:content';
import BlogPostLayout from '../../layouts/BlogPostLayout.astro';

export const prerender = true;

export async function getStaticPaths() {
  try {
    const posts = await getCollection('blog');
    
    if (!posts || !posts.length) {
      return [{
        params: { slug: 'not-found' },
        props: { entry: null }
      }];
    }

    const paths = posts.map((entry: CollectionEntry<'blog'>) => ({
      params: { slug: entry.slug },
      props: { entry },
    }));

    return paths;

  } catch (error) {
    throw error;
  }
}

interface Props {
  entry: CollectionEntry<'blog'> | null;
}

type Params = {
  slug: string;
};

const { entry } = Astro.props;
const { slug } = Astro.params as Params;

if (!entry) {
  return new Response('Blog-Post nicht gefunden', {
    status: 404,
    statusText: 'Not Found'
  });
}

const { Content } = await entry.render();
---

<BlogPostLayout frontmatter={{
  ...entry.data,
  file: entry.id,
  url: `/blog/${entry.slug}`
}}>
  <Content />
</BlogPostLayout> 