---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.vue';
import Footer from '../../components/Footer.astro';
import ConsultationButton from '../../components/ConsultationButton.vue';

const stats = [
  { value: '+60%', label: 'Markenbekanntheit' },
  { value: '6', label: 'Wochen Entwicklungszeit' },
  { value: '100%', label: 'Kundenzufriedenheit' }
];

const processSteps = [
  {
    title: 'Markenentwicklung',
    description: 'Ein modernes Branding, das Tradition und Innovation vereint.',
    image: '/images/gin-fischer-1920x1080.jpg'
  },
  {
    title: 'Flaschendesign',
    description: 'Einzigartiges Flaschendesign, das die Handwerkskunst betont.',
    image: '/images/gin-fischer-1920x1080-2.jpg'
  },
  {
    title: 'Digitale Präsenz',
    description: 'Entwicklung einer starken Online-Präsenz für die neue Generation.',
    image: '/images/guest-journey-harbr-2000x1125.jpg'
  }
];
---

<Layout title="Brennerei Fischer - Fabian Paul">
  <Navigation client:load />
  
  <main class="bg-[#1E1E1E] text-[#E5E5E5]">
    <!-- Hero Section -->
    <section class="min-h-screen relative flex items-center">
      <div class="absolute inset-0 bg-black">
        <img 
          src="/images/gin-fischer-1920x1080.jpg"
          alt="Fischer Project"
          class="w-full h-full object-cover opacity-70"
        />
        <div class="absolute inset-0 bg-gradient-to-b from-black/50 via-transparent to-[#1E1E1E]"></div>
      </div>

      <div class="relative z-10 container mx-auto px-8 pt-32">
        <div class="max-w-4xl">
          <h1 class="text-[clamp(2.5rem,8vw,5rem)] font-medium leading-none tracking-tight mb-6">
            Brennerei Fischer
            <span class="block text-[#00FF00] text-[clamp(1.5rem,4vw,2.5rem)] mt-4">
              Tradition neu interpretiert
            </span>
          </h1>
          <p class="text-[clamp(1.125rem,2vw,1.5rem)] font-light max-w-2xl mb-12 leading-relaxed">
            Gin & Branding: Tradition in dritter Generation, neu interpretiert
          </p>
          <a 
            href="/#projects"
            class="inline-flex items-center gap-2 text-[#00FF00] hover:gap-4 transition-all duration-300"
          >
            <svg class="w-6 h-6 rotate-180" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
            </svg>
            <span>Zurück zur Übersicht</span>
          </a>
        </div>
      </div>
    </section>

    <!-- Vision Section -->
    <section class="py-32 px-8">
      <div class="container mx-auto">
        <div class="max-w-4xl mx-auto">
          <h2 class="text-[clamp(2rem,5vw,3rem)] font-medium mb-8">
            Ziel und Vision
            <div class="w-24 h-1 bg-[#00FF00] mt-4"></div>
          </h2>
          <div class="space-y-6 text-[clamp(1rem,1.5vw,1.25rem)] leading-relaxed">
            <p>
              Das Ziel war es, die <span class="text-[#00FF00]">traditionelle Handwerkskunst</span> der Brennerei Fischer in ein modernes Markenerlebnis zu übersetzen, das die nächste Generation von Gin-Liebhabern anspricht.
            </p>
            <p>
              Durch die Verbindung von <span class="text-[#00FF00]">handwerklicher Tradition</span> und <span class="text-[#00FF00]">zeitgemäßem Design</span> haben wir eine Markenidentität geschaffen, die Geschichte erzählt und Zukunft gestaltet.
            </p>
          </div>
        </div>
      </div>
    </section>

    <!-- Process Section -->
    <section class="py-32 px-8 bg-black/30">
      <div class="container mx-auto">
        <h2 class="text-[clamp(2rem,5vw,3rem)] font-medium mb-16 text-center">
          Prozess und Highlights
        </h2>
        
        <div class="relative overflow-x-auto pb-8 -mx-8 px-8" id="process-scroll">
          <div class="flex gap-8 min-w-max">
            {processSteps.map((step, index) => (
              <div class="w-[min(600px,80vw)] opacity-0" data-step={index}>
                <div class="aspect-video overflow-hidden rounded-lg mb-6">
                  <img 
                    src={step.image} 
                    alt={step.title}
                    class="w-full h-full object-cover"
                  />
                </div>
                <h3 class="text-[clamp(1.5rem,3vw,2rem)] font-medium mb-4">{step.title}</h3>
                <p class="text-[#A3A3A3] text-[clamp(1rem,1.5vw,1.25rem)] leading-relaxed">
                  {step.description}
                </p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>

    <!-- Results Section -->
    <section class="py-32 px-8">
      <div class="container mx-auto">
        <h2 class="text-[clamp(2rem,5vw,3rem)] font-medium mb-16 text-center">
          Das Ergebnis
        </h2>

        <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-24">
          {stats.map(stat => (
            <div class="text-center">
              <div class="stat-value text-[#00FF00] text-[clamp(2.5rem,6vw,4rem)] font-medium mb-2">
                {stat.value}
              </div>
              <div class="text-[#A3A3A3] text-[clamp(1rem,1.5vw,1.25rem)]">
                {stat.label}
              </div>
            </div>
          ))}
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          <img 
            src="/images/gin-fischer-1920x1080.jpg"
            alt="Fischer Gin"
            class="w-full rounded-lg"
          />
          <img 
            src="/images/gin-fischer-1920x1080-2.jpg"
            alt="Fischer Branding"
            class="w-full rounded-lg"
          />
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-32 px-8 bg-black/30">
      <div class="container mx-auto text-center">
        <h2 class="text-[clamp(2rem,5vw,3rem)] font-medium mb-8">
          Bereit für dein eigenes Projekt?
        </h2>
        <p class="text-[#A3A3A3] text-[clamp(1rem,1.5vw,1.25rem)] mb-12 max-w-2xl mx-auto">
          Lass uns zusammenarbeiten und deine Vision in die Realität umsetzen.
        </p>
        <div class="flex flex-wrap justify-center gap-6">
          <div class="scale-[0.8]">
            <ConsultationButton client:visible />
          </div>
          <a 
            href="/#projects"
            class="inline-flex items-center px-8 py-3 rounded-full border-2 border-[#00FF00] text-[#00FF00] hover:bg-[#00FF00] hover:text-[#1E1E1E] transition-colors duration-300"
          >
            Weitere Projekte ansehen
          </a>
        </div>
      </div>
    </section>
  </main>

  <Footer />
</Layout>

<script>
  // Initialize animations when the page loads
  window.addEventListener('load', () => {
    if (typeof gsap === 'undefined') return;

    // Fade in process steps when they enter the viewport
    const steps = document.querySelectorAll('[data-step]');
    steps.forEach((step, index) => {
      gsap.to(step, {
        scrollTrigger: {
          trigger: step,
          start: 'top center+=100',
          end: 'bottom center',
          toggleActions: 'play none none reverse'
        },
        opacity: 1,
        y: 0,
        duration: 0.8,
        delay: index * 0.2
      });
    });

    // Stats counter animation
    const stats = document.querySelectorAll('.stat-value');
    stats.forEach(stat => {
      const value = stat.textContent;
      if (value.includes('%')) {
        gsap.from(stat, {
          scrollTrigger: {
            trigger: stat,
            start: 'top center+=100',
            toggleActions: 'play none none reverse'
          },
          textContent: 0,
          duration: 2,
          snap: { textContent: 1 },
          stagger: 1,
          onUpdate: function() {
            stat.textContent = Math.ceil(this.targets()[0].textContent) + '%';
          }
        });
      } else if (!isNaN(value)) {
        gsap.from(stat, {
          scrollTrigger: {
            trigger: stat,
            start: 'top center+=100',
            toggleActions: 'play none none reverse'
          },
          textContent: 0,
          duration: 2,
          snap: { textContent: 1 },
          stagger: 1
        });
      }
    });
  });
</script>

<style>
  #process-scroll {
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  #process-scroll::-webkit-scrollbar {
    display: none;
  }

  [data-step] {
    transform: translateY(30px);
  }
</style>