---
---

<section class="min-h-screen px-8 flex items-center">
  <div class="w-full py-24 max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-12 items-center">
    <!-- Image - Order first on mobile -->
    <div id="hello-image" class="relative w-full order-first md:order-last">
      <div class="md:max-w-[500px] aspect-square md:aspect-[3/4] overflow-hidden md:mx-auto">
        <img 
          src="/images/shared/portrait-fabian-1683x1920.jpg"
          alt="Fabian Paul" 
          class="w-full h-full object-cover shadow-lg"
          width="600"
          height="800"
        />
      </div>
    </div>

    <!-- Text Content - Order second on mobile -->
    <div class="space-y-12 order-last md:order-first" id="hello-text">
      <!-- Greeting -->
      <div class="space-y-4">
        <h2>
          <span class="block text-[#E5E5E5] text-fluid-2xl font-light" style="letter-spacing: 0.02em;">
            Hi, ich bin
          </span>
          <div class="h-[clamp(50px,8vw,80px)] overflow-hidden relative" id="role-container">
            <div class="absolute w-full" id="roles">
              <span class="block text-[#E5E5E5] italic font-medium text-fluid-2xl" style="height: clamp(50px,8vw,80px); display: flex; align-items: center;">Fabian</span>
              <span class="block text-[#E5E5E5] italic font-medium text-fluid-2xl" style="height: clamp(50px,8vw,80px); display: flex; align-items: center;">Designer</span>
              <span class="block text-[#E5E5E5] italic font-medium text-fluid-2xl" style="height: clamp(50px,8vw,80px); display: flex; align-items: center;">Creative Developer</span>
            </div>
          </div>
        </h2>
      </div>

      <!-- Description -->
      <p class="text-[#E5E5E5] text-fluid-lg font-light" style="line-height: 1.75; letter-spacing: 0.02em;">
        Ich kreiere <span class="font-medium italic">digitale Erlebnisse</span> und <span class="font-medium italic">Branding</span> mit Charakter. Für <span class="font-medium italic">Unternehmen,</span> die auffallen und <span class="font-medium italic">Eindruck hinterlassen wollen.</span> Mit einem Mix aus strategischem Denken, kreativem Feingefühl und technologischem Know-how sorge ich dafür, dass <span class="font-medium italic">dein Auftritt nicht nur sichtbar, sondern spürbar wird.</span>
      </p>
      
      <!-- Buttons -->
      <div class="flex flex-wrap gap-[30px]" id="hello-buttons">
        <a 
          href="/contact"
          class="button-hover-effect relative flex items-center justify-center px-[clamp(20px,3vw,35.833px)] py-[clamp(8px,1.5vw,11.944px)] rounded-[35.833px] bg-[#0F0] text-[#1D1D1B] hover:scale-105 transition-all hover:shadow-[0_0_20px_rgba(0,255,0,0.3)] overflow-hidden"
          style="font-size: clamp(1rem, 1.5vw, 1.194rem); font-weight: 500; line-height: 1;"
        >
          <span class="relative z-10">Erstgespräch vereinbaren</span>
          <div class="absolute inset-0 bg-[#0F0] transform -translate-x-full transition-transform duration-300 ease-out hover-line"></div>
        </a>
        <a 
          href="/about"
          class="button-hover-effect relative flex items-center justify-center px-[clamp(20px,3vw,35.833px)] py-[clamp(8px,1.5vw,11.944px)] rounded-[35.833px] border border-[#0F0] text-[#0F0] hover:scale-105 transition-all hover:shadow-[0_0_20px_rgba(0,255,0,0.3)] overflow-hidden"
          style="font-size: clamp(1rem, 1.5vw, 1.194rem); font-weight: 500; line-height: 1;"
        >
          <span class="relative z-10">Mehr zu mir</span>
          <div class="absolute inset-0 bg-[#0F0]/10 transform -translate-x-full transition-transform duration-300 ease-out hover-line"></div>
        </a>
      </div>
    </div>
  </div>
</section>

<style>
  .button-hover-effect:hover .hover-line {
    transform: translateX(0);
  }

  #role-container {
    perspective: 1000px;
  }

  #roles {
    backface-visibility: hidden;
    transform-style: preserve-3d;
  }
</style>

<script>
  const initHelloSection = () => {
    window.addEventListener('load', () => {
      if (typeof gsap === 'undefined') return;

      // Initial animation timeline
      const timeline = gsap.timeline({
        scrollTrigger: {
          trigger: "#hello-text",
          start: "top center",
          once: true
        }
      });

      // Animate text elements
      timeline
        .from("#hello-text h2 span", {
          y: 30,
          opacity: 0,
          duration: 0.8,
          ease: "power2.out"
        })
        .from("#roles", {
          y: 30,
          opacity: 0,
          duration: 0.8,
          ease: "power2.out"
        }, "-=0.6")
        .from("#hello-text p", {
          y: 30,
          opacity: 0,
          duration: 0.8,
          ease: "power2.out"
        }, "-=0.4")
        .from("#hello-buttons", {
          y: 30,
          opacity: 0,
          duration: 0.8,
          ease: "power2.out"
        }, "-=0.4");

      // Image animation
      gsap.from("#hello-image img", {
        scrollTrigger: {
          trigger: "#hello-image",
          start: "top center",
          once: true
        },
        x: 50,
        opacity: 0,
        duration: 1,
        ease: "power2.out"
      });

      // Role switching loop mit verbesserter Animation
      const roles = document.getElementById('roles');
      const roleContainer = document.querySelector('#role-container');
      if (!roles || !roleContainer) return;
      
      const roleHeight = roleContainer.clientHeight;
      let currentRole = 0;
      const totalRoles = 3;
      let isAnimating = false;

      const switchRole = () => {
        if (isAnimating) return;
        isAnimating = true;

        // Timeline für komplexere Animation
        const tl = gsap.timeline({
          onComplete: () => {
            currentRole = (currentRole + 1) % totalRoles;
            isAnimating = false;
          }
        });

        // Aktuelle Position merken
        const currentY = -roleHeight * currentRole;
        // Nächste Position berechnen
        const nextY = -roleHeight * ((currentRole + 1) % totalRoles);

        tl.to(roles, {
          opacity: 0,
          y: currentY - 20,
          duration: 0.4,
          ease: "power2.inOut"
        })
        .set(roles, {
          y: nextY + 20
        })
        .to(roles, {
          opacity: 1,
          y: nextY,
          duration: 0.4,
          ease: "back.out(1.7)"
        });
      };

      // Start role switching mit verbesserter Timing-Kontrolle
      timeline
        .call(() => {
          // Erste Animation mit Verzögerung
          gsap.delayedCall(0.8, () => {
            const initialTl = gsap.timeline();
            initialTl
              .to(roles, {
                opacity: 0,
                y: 20,
                duration: 0.4,
                ease: "power2.inOut"
              })
              .set(roles, {
                y: -roleHeight + 20
              })
              .to(roles, {
                opacity: 1,
                y: -roleHeight,
                duration: 0.4,
                ease: "back.out(1.7)"
              })
              .call(() => {
                currentRole = 1;
                // Starte den regulären Interval
                setInterval(switchRole, 2500);
              });
          });
        });
    });
  };

  // Initialize animations
  initHelloSection();
</script>